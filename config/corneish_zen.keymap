#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};

#define BASE 0
#define LOWER 1
#define RAISE 2
#define SYMBOLS 3
#define CTRL_LAYER 4

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
// -----------------------------------------------------------------------------------------
// |  TAB    |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP  |
// | SYMBOLS |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '    |
// | SHFT    |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RSHFT |
//                       | GUI | RSE | SPC |   | ENT | LWR  | ALT |
                        bindings = <
   &kp TAB     &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &mo SYMBOLS &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT   &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                &kp LGUI &mo RAISE &kp SPACE   &kp RET &mo LOWER &kp RALT
                        >;
                };

                lower_layer {
                        label = "LOWER";
// -----------------------------------------------------------------------------------------
// | BTCLR |  BT1  |  BT2  | BT3 | BT4 | BT5 |   |  6  | ENT |  8  | DEL |  DEL | BKSP |
// |  TAB  |   1   |   2   |  3  |  4  |  5  |   | LFT | DWN |  UP | RGT | BKSP |      |
// | SHFT  |       |       |     |     |     |   |  =  | ESC |     |     |  \   |      |
//                    | GUI | ALT | ALT + SPC |   | ENT |     | ALT |
                        bindings = <
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4         &kp N6      &kp RET    &kp N8   &kp DEL     &kp DEL    &kp BSPC
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5               &kp LEFT    &kp DOWN   &kp UP   &kp RIGHT   &kp BSPC   &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans               &kp EQUAL   &kp ESC    &trans   &trans      &kp BSLH   &trans
                          	        &kp LGUI     &kp RALT      &kp LA(SPACE)             &kp RET   &trans   &kp RALT
                        >;
                };

                raise_layer {
                        label = "RAISE";
// -----------------------------------------------------------------------------------------
// |  GUI_TAB |  GUI_Q           |  GUI_W  |  #    |  ALT_ENT |  GUI_T     |   |  ^  |  GUI_U |  *  |     (      |  GUI_ALT_P  | BKSP |
// |          |  GUI_SHFT_A      |  GUI_S  |       |  GUI_F   |  GUI_SFT_G |   |  -  |  =     |  [  |  GUI_ALT_L |      \      | "|"  |
// | CTRL     |  GUI_CTRL_SHFT_4 |  GUI_X  | GUI_C |  GUI_V   |  GUI_ALT_B |   |  _  |  ENT   |  {  |     }      |      \     |  `   |
//                            | GUI   |         | SPC     |   | ENT |      | ALT |
                        bindings = <
   &kp  LG(TAB)   &kp LG(Q)          &kp LG(W) &kp HASH  &kp LA(RET) &kp LG(T)       &kp CARET &kp LG(U)  &kp KP_MULTIPLY &kp LPAR       &kp LG(LA(P)) &kp BSPC
   &trans         &kp LG(LS(A))      &kp LG(S) &trans    &kp LG(F)   &kp LG(LS(G))   &kp MINUS &kp EQUAL  &kp LBKT        &kp LG(LA(L))  &kp BSLH      &kp PIPE
   &mo CTRL_LAYER &kp LG(LC(LS(N4))) &kp LG(X) &kp LG(C) &kp LG(V)   &kp LG(LA(B))   &kp UNDER &kp RET    &kp LBRC        &kp RBRC       &kp BSLH      &kp GRAVE
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

		symbols_layer {
					label = "SYMBOLS";
		// -----------------------------------------------------------------------------------------
		// |  TAB |  !  |  @  |  {  |  }  |  |  |   |  /  |  7  |  8  |  9  |  &  |   \  |
		// |      |  #  |  $  |  (  |  )  |  `  |   |  *  |  4  |  5  |  6  |  0  |   "  |
		// |      |  %  |  ^  |  [  |  ]  |  ~  |   |  +  |  1  |  2  |  3  |  .  |      |
		//                    | GUI |     | SPC |   |     |  _  |  -  |
					bindings = <
		   &kp TAB &kp EXCL  &kp AT    &kp LBRC &kp RBRC &kp PIPE           &kp FSLH        &kp N7   &kp N8   &kp N9 &kp AMPS &kp BSLH
		   &trans  &kp HASH  &kp DLLR  &kp LPAR &kp RPAR &kp GRAVE          &kp KP_MULTIPLY &kp N4   &kp N5   &kp N6 &kp N0   &kp DQT
		   &trans  &kp PRCNT &kp CARET &kp LBKT &kp RBKT &kp TILDE          &kp PLUS        &kp N1   &kp N2   &kp N3 &kp DOT  &trans
				               &kp LGUI     &trans       &kp SPACE               &kp RET  &kp MINUS &kp UNDER  
					>;
				};

                ctrl_layer {
                        label = "CTRL_LAYER";
// -----------------------------------------------------------------------------------------
// |      | MUTE | VOL_DOWN | VOL_UP |  CTRL_R |  CMD_SHFT_T |   |     |      |     |     |     |      |
// |      |      |          |        |         |  CMD_SHFT_G |   |     |      |     |     |     |      |
// |    L |      |          | CTRL_C |  GUI_V  |             |   |     |      |     |     |     |      |
//                         |     |      |      |               |     |      |     |
                        bindings = <
   &trans    &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp LC(R) &kp LG(LS(T))     &trans &trans &trans &trans &trans &trans
   &trans    &trans    &trans    &trans    &trans    &trans    &kp LG(LS(G))     &trans &trans &trans &trans &trans
   &kp LCTRL &trans    &trans    &kp LC(C) &kp LC(V) &trans    &trans            &trans &trans &trans &trans &trans
                    	     &trans &trans   &trans               &trans   &trans    &trans
                        >;
                };
	};
};
